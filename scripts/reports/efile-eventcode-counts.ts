import { createApplicationContext } from '@web-api/applicationContext';
import { requireEnvVars } from '../../shared/admin-tools/util';
import { search } from '@web-api/persistence/elasticsearch/searchClient';
import { validateDateAndCreateISO } from '@shared/business/utilities/DateHandler';

requireEnvVars(['ENV', 'REGION']);
const applicationContext = createApplicationContext({});
const numOfEventCodes = 5000000;

// if (process.argv.length < 3) {
//   console.error('usage: efile-eventcode-counts.ts [year]');
//   process.exit(1);
// }

// const reportYear = parseInt(process.argv[2]);

const dateStart = validateDateAndCreateISO({
  day: '13',
  month: '6',
  year: '2023',
});
const dateEnd = validateDateAndCreateISO({
  day: '13',
  month: '6',
  year: '2024',
});

const efileEventCodes = [
  'AMAT',
  'ADMT',
  'REQA',
  'STIP',
  'SUPM',
  'SPML',
  'ADMR',
  'AFF',
  'ACED',
  'AMDC',
  'A',
  'AAPN',
  'ATAP',
  'AAAP',
  'AATP',
  'APA',
  'ATSP',
  'AATS',
  'ASUP',
  'ASAP',
  'AATT',
  'APW',
  'APPW',
  'APLD',
  'ATP',
  'BRF',
  'CERT',
  'CS',
  'CIVP',
  'COED',
  'DISC',
  'DCL',
  'EA',
  'EXH',
  'LEA',
  'MEMO',
  'MISP',
  'M218',
  'M001',
  'M002',
  'M003',
  'M004',
  'M136',
  'M005',
  'M006',
  'M009',
  'M137',
  'M007',
  'M008',
  'M010',
  'M011',
  'M135',
  'M012',
  'M121',
  'M013',
  'M115',
  'M014',
  'M015',
  'M118',
  'M016',
  'M017',
  'M018',
  'M019',
  'M020',
  'M021',
  'M022',
  'M023',
  'M024',
  'M122',
  'M026',
  'M027',
  'M028',
  'M029',
  'M030',
  'M033',
  'M034',
  'M035',
  'M036',
  'M037',
  'M039',
  'M040',
  'M041',
  'M042',
  'M043',
  'M045',
  'M044',
  'M117',
  'M046',
  'M047',
  'M049',
  'M050',
  'M051',
  'M052',
  'M038',
  'M055',
  'M056',
  'M133',
  'M058',
  'M059',
  'M060',
  'M061',
  'M062',
  'M063',
  'M064',
  'M065',
  'M066',
  'M134',
  'M067',
  'M053',
  'M124',
  'M054',
  'M068',
  'M069',
  'M070',
  'M071',
  'M072',
  'M073',
  'M126',
  'M074',
  'M075',
  'M130',
  'M076',
  'M077',
  'M078',
  'M080',
  'M081',
  'MLSP',
  'M083',
  'M125',
  'M084',
  'M088',
  'M085',
  'MOTR',
  'M087',
  'M089',
  'M090',
  'M132',
  'M091',
  'M092',
  'M093',
  'M094',
  'M095',
  'M096',
  'M097',
  'M098',
  'M114',
  'M099',
  'M131',
  'M100',
  'M101',
  'M102',
  'M103',
  'M104',
  'M105',
  'M106',
  'M107',
  'M129',
  'M119',
  'M108',
  'M109',
  'M120',
  'M110',
  'M111',
  'M112',
  'M116',
  'M113',
  'NOB',
  'NAJA',
  'NOA',
  'NCA',
  'NCAP',
  'NCP',
  'NCTP',
  'NOC',
  'NCON',
  'NCAG',
  'NDC',
  'NOEI',
  'NOEP',
  'NIS',
  'NFAR',
  'NITM',
  'NINF',
  'NOI',
  'NIFL',
  'NJAR',
  'NRJR',
  'NNOB',
  'OBJN',
  'NPJR',
  'NPB',
  'NRJD',
  'NOST',
  'NSTE',
  'NSA',
  'NTN',
  'NTA',
  'NOU',
  'NOTW',
  'OBJE',
  'OPPO',
  'PARD',
  'P',
  'PHM',
  'PMT',
  'PSDE',
  'PTE',
  'RATF',
  'REDC',
  'PTFR',
  'REPL',
  'RTP',
  'RJN',
  'RQT',
  'RFPC',
  'RSP',
  'RCOM',
  'SEAB',
  'SAMB',
  'SEOB',
  'SOMB',
  'SERB',
  'SRMB',
  'SESB',
  'SSRB',
  'SSTP',
  'SIAB',
  'SIAM',
  'SIMB',
  'SIML',
  'SIOB',
  'SIOM',
  'SIRB',
  'SSB',
  'SISB',
  'SSRM',
  'STAT',
  'S212',
  'STAR',
  'RPT',
  'STP',
  'SADM',
  'SPAR',
  'SPD',
  'STST',
  'STS',
  'STBB',
  'STPD',
  'SOC',
  'SURP',
  'USDL  ',
];

const documentQuery = {
  body: {
    aggs: {
      search_field_count: {
        terms: {
          field: 'eventCode.S',
          size: numOfEventCodes,
        },
      },
    },
    query: {
      bool: {
        filter: [
          { term: { 'entityName.S': 'DocketEntry' } },
          {
            term: {
              'isStricken.BOOL': false,
            },
          },
          {
            range: {
              'receivedAt.S': {
                gte: dateStart,
                lt: dateEnd,
              },
            },
          },
        ],
      },
    },
    size: 0,
    track_total_hits: true,
  },
  index: 'efcms-docket-entry',
};

async function main() {
  const { aggregations, total } = await search({
    applicationContext,
    searchParameters: documentQuery,
  });
  //   console.log(JSON.stringify(aggregations, null, 4));
  // console.table(aggregations.search_field_count.buckets);

  console.warn('total', total);
  console.log('eventcode,eventCount');
  for (const row of aggregations.search_field_count.buckets) {
    if (efileEventCodes.includes(row.key)) {
      console.log(`${row.key},${row.doc_count}`);
    } else {
      console.warn(
        `excluding non-efile eventcode: ${row.key}(count:${row.doc_count})`,
      );
    }
  }
}

// eslint-disable-next-line @typescript-eslint/no-floating-promises
main();
